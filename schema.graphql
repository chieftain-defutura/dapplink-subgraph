type _Schema_
  @fulltext(
    name: "digitalShopSearch"
    language: en
    algorithm: rank
    include: [{ entity: "DigitalShopToken", fields: [{ name: "domainName" }] }]
  )
  @fulltext(
    name: "physicalShopSearch"
    language: en
    algorithm: rank
    include: [{ entity: "PhysicalShopToken", fields: [{ name: "domainName" }] }]
  )
  @fulltext(
    name: "digitalItemSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "DigitalItem"
        fields: [{ name: "category" }, { name: "subcategory" }]
      }
    ]
  )
  @fulltext(
    name: "physicalItemSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "PhysicalItem"
        fields: [{ name: "category" }, { name: "subcategory" }]
      }
    ]
  )

enum SaleStatus {
  ACTIVE
  PURCHASED
  REMOVED
  DISPATCHED
  CANCELLED
  COMPLETED
}

enum ShipmentStatus {
  PREPARING
  PREPARED
  DISPATCHED
  CANCELLED
  RECEIVED
}

enum MarketStatus {
  ACTIVE
  CANCELLED
  FINISHED
}

enum ReviewStatus {
  GOOD
  BAD
}

type Token @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: String!
}

type Benificiary @entity {
  id: ID!
  contractAddress: Bytes!
  tokenId: BigInt!
  shareOwner: Bytes!
  sharePercent: BigInt!
  isActive: Boolean
}

type DomainToken @entity {
  id: ID!
  tokenId: BigInt!
  domainName: String!
  tld: String!
  tokenUri: String
  owner: User!
}

type DigitalShopToken @entity {
  id: ID!
  tokenId: BigInt!
  domainId: BigInt!
  domainName: String
  tokenUri: String
  owner: User!
  upVote: BigInt!
  downVote: BigInt!
  items: [DigitalItem!] @derivedFrom(field: "shopDetails")
  lastSale: DigitalItem
}

type PhysicalShopToken @entity {
  id: ID!
  tokenId: BigInt!
  domainId: BigInt!
  domainName: String
  tokenUri: String
  owner: User!
  upVote: BigInt!
  downVote: BigInt!
  items: [PhysicalItem!] @derivedFrom(field: "shopDetails")
  lastSale: Shipment
}

type WebsiteToken @entity {
  id: ID!
  tokenId: BigInt!
  domainId: BigInt!
  domainName: String
  tokenUri: String
  owner: User!
}

type CharityToken @entity {
  id: ID!
  tokenId: BigInt!
  domainId: BigInt!
  domainName: String
  tokenUri: String
  owner: User!
}

type FullOnBlockchainArtToken @entity {
  id: ID!
  tokenId: BigInt!
  domainId: BigInt!
  domainName: String
  tokenUri: String
  owner: User!
}

type UserCollection @entity {
  id: ID!
  user: Bytes!
  category: String!
  totalItems: BigInt!
}

type User @entity {
  id: ID!
  domainTokens: [DomainToken!] @derivedFrom(field: "owner")
  digitalShopTokens: [DigitalShopToken!] @derivedFrom(field: "owner")
  physicalShopTokens: [PhysicalShopToken!] @derivedFrom(field: "owner")
  digitalItems: [DigitalItem!] @derivedFrom(field: "owner")
  physicalItems: [PhysicalItem!] @derivedFrom(field: "owner")
  websiteTokens: [WebsiteToken!] @derivedFrom(field: "owner")
  charityTokens: [CharityToken!] @derivedFrom(field: "owner")
  fullOnBlockchainArtTokens: [FullOnBlockchainArtToken!]
    @derivedFrom(field: "owner")
  haveToSend: BigInt!
  awaitingDelivery: BigInt!
}

type DigitalItem @entity {
  id: ID!
  shopDetails: DigitalShopToken!
  category: String!
  subcategory: String!
  metadata: String!
  fullproduct: String!
  price: BigInt!
  erc20Token: Token!
  status: SaleStatus!
  itemName: String!
  owner: User
  listedAt: BigInt!
}

type PhysicalItem @entity {
  id: ID!
  shopDetails: PhysicalShopToken!
  category: String!
  subcategory: String!
  metadata: String!
  quantity: BigInt!
  price: BigInt!
  erc20Token: Token!
  status: SaleStatus!
  itemName: String!
  owner: User
  listedAt: BigInt!
}

type FixedSale @entity {
  id: ID!
  auctionId: BigInt!
  tokenId: BigInt!
  price: BigInt!
  owner: Bytes!
  erc20Token: Token!
  erc721TokenAddress: Bytes!
  status: MarketStatus!
  buyer: Bytes
}

type Bidders @entity {
  id: ID!
  bidder: Bytes
  amount: BigInt
}

type Auction @entity {
  id: ID!
  auctionId: BigInt!
  tokenId: BigInt!
  price: BigInt!
  owner: Bytes!
  erc20Token: Token!
  erc721TokenAddress: Bytes!
  startTime: BigInt!
  endTime: BigInt!
  status: MarketStatus!
  highestBidder: Bytes
  highestBid: BigInt
  previousBids: [Bidders!]!
}

type Shipment @entity {
  id: ID!
  itemId: PhysicalItem!
  deliveryHash: String!
  quantity: BigInt!
  status: ShipmentStatus!
  buyer: Bytes!
  owner: String
}

type Review @entity {
  id: ID!
  shipment: Shipment!
  itemId: PhysicalItem!
  user: Bytes!
  review: String!
  status: ReviewStatus!
}
